name: release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        echo "::add-path::$HOME/.poetry/bin"

    - name: Install package
      run: |
        poetry install

    - name: Run tests
      run: |
        poetry run pytest -v

    - name: Build wheel
      id: build
      run: |
        poetry build
        echo ::set-output name=wheel_name::investments-${GITHUB_REF#refs/tags/}-py3-none-any.whl

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: investments-${{ steps.tag.outputs.tag }}-py3-none-any.whl
    #     path: releases/poetry-${{ steps.tag.outputs.tag }}-linux.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ${{ steps.build.outputs.wheel_name }}
          asset_path: dists/${{ steps.build.outputs.wheel_name }}
          asset_content_type: application/x-wheel+zip
